// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf-examples/vs-prost/src/triangle.proto

#include "protobuf-examples/vs-prost/src/triangle.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Properties_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto;
class PropertiesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Properties> _instance;
  ::PROTOBUF_NAMESPACE_ID::int32 p1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr p2_;
} _Properties_default_instance_;
class TriangleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Triangle> _instance;
} _Triangle_default_instance_;
static void InitDefaultsscc_info_Properties_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Properties_default_instance_;
    new (ptr) ::Properties();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Properties::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Properties_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Properties_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto}, {}};

static void InitDefaultsscc_info_Triangle_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Triangle_default_instance_;
    new (ptr) ::Triangle();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Triangle::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Triangle_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Triangle_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto}, {
      &scc_info_Properties_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Properties, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Properties, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::PropertiesDefaultTypeInternal, p1_),
  offsetof(::PropertiesDefaultTypeInternal, p2_),
  PROTOBUF_FIELD_OFFSET(::Properties, properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Triangle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Triangle, description_),
  PROTOBUF_FIELD_OFFSET(::Triangle, color_),
  PROTOBUF_FIELD_OFFSET(::Triangle, properties_),
  PROTOBUF_FIELD_OFFSET(::Triangle, struct__),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Properties)},
  { 8, -1, sizeof(::Triangle)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Properties_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Triangle_default_instance_),
};

const char descriptor_table_protodef_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n-protobuf-examples/vs-prost/src/triangl"
  "e.proto\"6\n\nProperties\022\014\n\002p1\030\001 \001(\005H\000\022\014\n\002p"
  "2\030\002 \001(\tH\000B\014\n\nproperties\"g\n\010Triangle\022\023\n\013d"
  "escription\030\001 \001(\t\022\025\n\005color\030\002 \001(\0162\006.Color\022"
  "\037\n\nproperties\030\003 \001(\0132\013.Properties\022\016\n\006stru"
  "ct\030\004 \001(\005*2\n\005Color\022\013\n\007UNKNOWN\020\000\022\007\n\003RED\020\001\022"
  "\t\n\005GREEN\020\002\022\010\n\004BLUE\020\003b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto_sccs[2] = {
  &scc_info_Properties_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto.base,
  &scc_info_Triangle_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto = {
  false, false, descriptor_table_protodef_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto, "protobuf-examples/vs-prost/src/triangle.proto", 268,
  &descriptor_table_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto_once, descriptor_table_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto_sccs, descriptor_table_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto::offsets,
  file_level_metadata_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto, 2, file_level_enum_descriptors_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto, file_level_service_descriptors_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto)), true);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Color_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto);
  return file_level_enum_descriptors_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto[0];
}
bool Color_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Properties::InitAsDefaultInstance() {
  ::_Properties_default_instance_.p1_ = 0;
  ::_Properties_default_instance_.p2_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class Properties::_Internal {
 public:
};

Properties::Properties(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Properties)
}
Properties::Properties(const Properties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_properties();
  switch (from.properties_case()) {
    case kP1: {
      _internal_set_p1(from._internal_p1());
      break;
    }
    case kP2: {
      _internal_set_p2(from._internal_p2());
      break;
    }
    case PROPERTIES_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Properties)
}

void Properties::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Properties_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto.base);
  clear_has_properties();
}

Properties::~Properties() {
  // @@protoc_insertion_point(destructor:Properties)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Properties::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_properties()) {
    clear_properties();
  }
}

void Properties::ArenaDtor(void* object) {
  Properties* _this = reinterpret_cast< Properties* >(object);
  (void)_this;
}
void Properties::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Properties::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Properties& Properties::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Properties_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto.base);
  return *internal_default_instance();
}


void Properties::clear_properties() {
// @@protoc_insertion_point(one_of_clear_start:Properties)
  switch (properties_case()) {
    case kP1: {
      // No need to clear
      break;
    }
    case kP2: {
      properties_.p2_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case PROPERTIES_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROPERTIES_NOT_SET;
}


void Properties::Clear() {
// @@protoc_insertion_point(message_clear_start:Properties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_properties();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Properties::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 p1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _internal_set_p1(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string p2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_p2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Properties.p2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Properties::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Properties)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 p1 = 1;
  if (_internal_has_p1()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_p1(), target);
  }

  // string p2 = 2;
  if (_internal_has_p2()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_p2().data(), static_cast<int>(this->_internal_p2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Properties.p2");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_p2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Properties)
  return target;
}

size_t Properties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Properties)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (properties_case()) {
    // int32 p1 = 1;
    case kP1: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_p1());
      break;
    }
    // string p2 = 2;
    case kP2: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_p2());
      break;
    }
    case PROPERTIES_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Properties::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Properties)
  GOOGLE_DCHECK_NE(&from, this);
  const Properties* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Properties>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Properties)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Properties)
    MergeFrom(*source);
  }
}

void Properties::MergeFrom(const Properties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Properties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.properties_case()) {
    case kP1: {
      _internal_set_p1(from._internal_p1());
      break;
    }
    case kP2: {
      _internal_set_p2(from._internal_p2());
      break;
    }
    case PROPERTIES_NOT_SET: {
      break;
    }
  }
}

void Properties::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Properties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Properties::CopyFrom(const Properties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Properties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Properties::IsInitialized() const {
  return true;
}

void Properties::InternalSwap(Properties* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(properties_, other->properties_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Properties::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Triangle::InitAsDefaultInstance() {
  ::_Triangle_default_instance_._instance.get_mutable()->properties_ = const_cast< ::Properties*>(
      ::Properties::internal_default_instance());
}
class Triangle::_Internal {
 public:
  static const ::Properties& properties(const Triangle* msg);
};

const ::Properties&
Triangle::_Internal::properties(const Triangle* msg) {
  return *msg->properties_;
}
Triangle::Triangle(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Triangle)
}
Triangle::Triangle(const Triangle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  if (from._internal_has_properties()) {
    properties_ = new ::Properties(*from.properties_);
  } else {
    properties_ = nullptr;
  }
  ::memcpy(&color_, &from.color_,
    static_cast<size_t>(reinterpret_cast<char*>(&struct__) -
    reinterpret_cast<char*>(&color_)) + sizeof(struct__));
  // @@protoc_insertion_point(copy_constructor:Triangle)
}

void Triangle::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Triangle_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto.base);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&properties_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&struct__) -
      reinterpret_cast<char*>(&properties_)) + sizeof(struct__));
}

Triangle::~Triangle() {
  // @@protoc_insertion_point(destructor:Triangle)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Triangle::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete properties_;
}

void Triangle::ArenaDtor(void* object) {
  Triangle* _this = reinterpret_cast< Triangle* >(object);
  (void)_this;
}
void Triangle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Triangle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Triangle& Triangle::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Triangle_protobuf_2dexamples_2fvs_2dprost_2fsrc_2ftriangle_2eproto.base);
  return *internal_default_instance();
}


void Triangle::Clear() {
// @@protoc_insertion_point(message_clear_start:Triangle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && properties_ != nullptr) {
    delete properties_;
  }
  properties_ = nullptr;
  ::memset(&color_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&struct__) -
      reinterpret_cast<char*>(&color_)) + sizeof(struct__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Triangle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string description = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Triangle.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Color color = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_color(static_cast<::Color>(val));
        } else goto handle_unusual;
        continue;
      // .Properties properties = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_properties(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 struct = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          struct__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Triangle::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Triangle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Triangle.description");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_description(), target);
  }

  // .Color color = 2;
  if (this->color() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_color(), target);
  }

  // .Properties properties = 3;
  if (this->has_properties()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::properties(this), target, stream);
  }

  // int32 struct = 4;
  if (this->struct_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_struct_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Triangle)
  return target;
}

size_t Triangle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Triangle)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .Properties properties = 3;
  if (this->has_properties()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *properties_);
  }

  // .Color color = 2;
  if (this->color() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_color());
  }

  // int32 struct = 4;
  if (this->struct_() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_struct_());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Triangle::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Triangle)
  GOOGLE_DCHECK_NE(&from, this);
  const Triangle* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Triangle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Triangle)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Triangle)
    MergeFrom(*source);
  }
}

void Triangle::MergeFrom(const Triangle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Triangle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.has_properties()) {
    _internal_mutable_properties()->::Properties::MergeFrom(from._internal_properties());
  }
  if (from.color() != 0) {
    _internal_set_color(from._internal_color());
  }
  if (from.struct_() != 0) {
    _internal_set_struct_(from._internal_struct_());
  }
}

void Triangle::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Triangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Triangle::CopyFrom(const Triangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Triangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Triangle::IsInitialized() const {
  return true;
}

void Triangle::InternalSwap(Triangle* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Triangle, struct__)
      + sizeof(Triangle::struct__)
      - PROTOBUF_FIELD_OFFSET(Triangle, properties_)>(
          reinterpret_cast<char*>(&properties_),
          reinterpret_cast<char*>(&other->properties_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Triangle::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Properties* Arena::CreateMaybeMessage< ::Properties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Properties >(arena);
}
template<> PROTOBUF_NOINLINE ::Triangle* Arena::CreateMaybeMessage< ::Triangle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Triangle >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
